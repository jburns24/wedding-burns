name: Docker Build and Push

on:
  push:
    tags:
      # Match tags like backend/v1.2.3 and frontend/v1.2.3
      - "*/v*.*.*"

permissions:
  contents: read
  packages: write

jobs:
  extract-component:
    runs-on: ubuntu-latest
    outputs:
      component: ${{ steps.tag-prefix.outputs.component }}
    steps:
      - name: Extract component from tag
        id: tag-prefix
        run: |
          # Extract tag from GITHUB_REF (refs/tags/frontend/v0.0.2 -> frontend/v0.0.2)
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "Full tag: $TAG_NAME"

          # Check if tag matches expected pattern (component/v*.*.*)
          if [[ $TAG_NAME =~ ^(backend|frontend)/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # Extract component name (everything before the first /)
            COMPONENT=${TAG_NAME%%/*}
            echo "Extracted component: $COMPONENT"
            echo "component=$COMPONENT" >> $GITHUB_OUTPUT
          else
            echo "ERROR: Tag '$TAG_NAME' does not match expected pattern 'backend/v*.*.*' or 'frontend/v*.*.*'"
            exit 1
          fi

  docker:
    runs-on: ubuntu-24.04-arm
    needs: extract-component
    # defaults:
    #   run:
    #     working-directory: ${{ needs.extract-component.outputs.component }}
    steps:
      - uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}/${{ needs.extract-component.outputs.component }}
          # generate Docker tags based on the following events/attributes
          # Strips out the component prefix from the tag for cleaner image tags
          tags: |
            type=ref,event=tag,value={{tag}},pattern=.*/(.*)
            type=semver,pattern={{version}},value={{tag}},match=.*/(.*)
            type=semver,pattern={{major}}.{{minor}},value={{tag}},match=.*/(.*)
            type=semver,pattern={{major}},value={{tag}},match=.*/(.*)
            type=sha

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ needs.extract-component.outputs.component }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

